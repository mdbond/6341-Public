Q main(int arg) {
    Ref list = (25959 . (29933 . (97235 . (73145 . (14301 . (87880 . (33860 . (94878 . (33475 . (66125 . (77247 . (85147 . (50285 . (85796 . (91151 . (50875 . (26679 . (56038 . (37116 . (30647 . (70091 . (83320 . (25252 . (70263 . (59578 . (46266 . (88414 . (8750 . (87405 . (93715 . (5900 . (20283 . (16719 . (17230 . (87304 . (53607 . (93377 . (50198 . (12701 . (6299 . (76779 . (42136 . (59759 . (52897 . (14087 . (22922 . (8844 . (40098 . (47092 . (44471 . (22205 . (49026 . (87700 . (85799 . (70189 . (32148 . (77414 . (7365 . (45660 . (77282 . (79668 . (35493 . (99600 . (54806 . (70594 . (33384 . (9763 . (6586 . (88809 . (80517 . (19615 . (28697 . (36229 . (94213 . (28859 . (25067 . (73572 . (41984 . (97707 . (3826 . (92829 . (67053 . (32135 . (81023 . (82399 . (75724 . (94594 . (97981 . (95412 . (60788 . (97444 . (34586 . (61593 . (84881 . (50719 . (5118 . (65045 . (23110 . (8735 . (19437 . (1069 . (92733 . (22961 . (96208 . (39431 . (16803 . (2979 . (83087 . (41782 . (66337 . (56846 . (1975 . (32908 . (52013 . (53446 . (77644 . (31689 . (46761 . (74296 . (83975 . (60980 . (87413 . (14152 . (62613 . (29545 . (51146 . (6552 . (73285 . (37747 . (79367 . (98058 . (18059 . (26998 . (78023 . (39700 . (42062 . (4437 . (73565 . (37128 . (27724 . (86045 . (34971 . (99675 . (57246 . (10922 . (26427 . (22754 . (20864 . (94162 . (8437 . (16243 . (68639 . (56762 . (47911 . (42603 . (44770 . (3306 . (25793 . (79973 . (66589 . (95575 . (36968 . (10623 . (65887 . (84310 . (19339 . (90969 . (36962 . (55252 . (25698 . (21935 . (56824 . (27266 . (59631 . (34857 . (64370 . (8618 . (75478 . (37259 . (33270 . (47669 . (7465 . (67335 . (80548 . (54896 . (43669 . (73046 . (17920 . (5887 . (13783 . (75741 . (8326 . (79045 . (1059 . (69892 . (34055 . (26857 . (50371 . (40814 . (79191 . nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    return sort(list);
}

Ref sort(Ref list) {
    if (isNil(list) != 0 || isNil(right(list)) != 0) return list;
    int pivot = (int)left(list);
    return concat(sort(subList(list, pivot, -1)), concat(subList(list, pivot, 0), sort(subList(list, pivot, 1))));
}

Ref subList(Ref list, int pivot, int comparator) {
    if (isNil(list) != 0)
        return nil;
    int first = (int)left(list);
    Ref rest = (Ref)right(list);
    if ((comparator <  0 && first <  pivot) ||
        (comparator == 0 && first == pivot) ||
        (comparator >  0 && first >  pivot))
        return first . subList(rest, pivot, comparator);
    return subList(rest, pivot, comparator);
}

Ref concat(Ref first, Ref second) {
    if (isNil(first) != 0)
        return second;
    if (isNil(right(first)) != 0)
        return left(first) . second;
    return left(first) . concat((Ref)right(first), second);
}

int isSorted(Ref list) {
    if (isNil(list) != 0 || isNil(right(list)) != 0)
        return 1;
    if ((int)left(list) > (int)left((Ref)right(list)))
        return 0;
    return isSorted((Ref)right(list));
}

int length(Ref list) {
    if (isNil(list) != 0) return 0;
    return 1 + length((Ref)right(list));
}

Ref randomList(int n) {
    if (n == 0) return nil;
    return randomInt(10000) . randomList(n - 1);
}
